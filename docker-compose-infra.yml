version: "3.7"
services:

    postgres:
        container_name: postgresdb
        image: postgres
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - postgres-data:/data
        restart: always

    adminer:
        container_name: postgres-admin
        image: adminer
        restart: always
        ports:
            - 8080:8080
    
    # elk:
    #     container_name: elk-stack
    #     image: sebp/elk
    #     restart: always
    #     ports:
    #         - 5601:5601
    #         - 9200:9200
    #         - 5044:5044
    #     environment:
    #         MAX_MAP_COUNT: ${MAX_MAP_COUNT}

    # mongo-express:
    #     image: mongo-express
    #     container_name: mongo-express
    #     restart: always
    #     ports:
    #       - 8081:8081
    #     environment:
    #       ME_CONFIG_MONGODB_AUTH_DATABASE: "scraper-manager"
    #       ME_CONFIG_MONGODB_AUTH_USERNAME: "user"
    #       ME_CONFIG_MONGODB_AUTH_PASSWORD: "password"
    #       ME_CONFIG_MONGODB_ADMINUSERNAME: "admin"
    #       ME_CONFIG_MONGODB_ADMINPASSWORD: "admin"

    # rabbit:
    #   container_name: rabbit
    #   image: rabbitmq:3-management
    #   ports:
    #       - "15673:15672" # Exposing RabbitMQ web management on different port for convenience
    #   restart: always

    # scraper-worker:
    #   container_name: scraper-worker
    #   build:
    #     context: scraper-worker
    #   depends_on:
    #     - rabbit
    #     - postgres
    #   environment:
    #       REDIS_HOST: "redis"
    #       REDIS_PORT: "6379"
    #       RABBIT_PASSWORD: "guest"
    #       RABBIT_USER: "guest"
    #       RABBIT_HOST: "rabbit"
    #       RABBIT_PORT: "5672"
    #       RABBIT_MANAGEMENT_PORT: "15672"
    #       DB_PASSWORD: "password"
    #       DB_USER: "postgres"
    #       DB_HOST: "postgres"
    #       DB_NAME: "little-birds"

    #
    # mongo:
    #   image: mongo
    #   restart: always
    #   container_name: mongo
    #   environment:
    #     MONGO_INITDB_DATABASE: "scraper-manager"
    #     MONGO_INITDB_ROOT_USERNAME: "admin"
    #     MONGO_INITDB_ROOT_PASSWORD: "admin"
    #   volumes:
    # # - ./config/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    # - ./mongo-volume:/data/db

    # rproxy:
    #   hostname: rproxy
    #   image: anuragrana/rotating-proxy
    #   environment:
    #       - tors=25
    #   ports:
    #       - "5566:5566"
    #       - "4444:4444"

volumes:
    postgres-data: